name: ðŸ§ª Build Test & Scan Quality

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_dispatch:

permissions:
  contents: read

jobs:
  quality-check:
    runs-on: windows-latest
    name: Build, Test, and Virus Scan
    env:
      HAS_VT_KEY: ${{ secrets.VIRUSTOTAL_API_KEY != '' }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: ðŸ§© Install .NET Framework 3.5 Developer Pack
        shell: pwsh
        run: |
          Write-Host "Installing .NET Framework 3.5 Developer Pack..."
          $url = "https://download.visualstudio.microsoft.com/download/pr/9b6c777c-85c1-48c8-8de5-5672d8d49bb5/8c5e7c9fb2472bcb0b54cb1a9489e5bb/ndp35sp1-kb2600211-x86-x64-allos-enu.exe"
          $installer = "$env:TEMP\ndp35sp1.exe"
          Invoke-WebRequest -Uri $url -OutFile $installer
          Start-Process -FilePath $installer -ArgumentList "/quiet", "/norestart" -Wait
          Write-Host ".NET Framework 3.5 Developer Pack installed successfully."

      - name: Setup .NET SDK
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 8.0.x

      - name: Restore and Build
        run: |
          dotnet restore
          dotnet build --configuration Release --no-restore

      - name: Run Unit Tests
        run: dotnet test --configuration Release --no-build --logger trx

      - name: VirusTotal Scan
        if: env.HAS_VT_KEY == 'true'
        uses: crazy-max/ghaction-virustotal@v4
        with:
          vt_api_key: ${{ secrets.VIRUSTOTAL_API_KEY }}
          files: |
            **/*.exe
            **/*.dll
            **/*.nupkg
          vt_monitor: false

      - name: Generate Summary Report
        shell: pwsh
        run: |
          $report = @()
          $report += "# ðŸ§ª Build & Test Quality Report"
          $report += ""
          $report += "## âœ… Build Status"
          $report += "Solution built successfully targeting .NET Framework 3.5."
          $report += ""
          $report += "## ðŸ§ª Test Results"
          $report += "All tests executed successfully."
          $report += ""
          if ($env:HAS_VT_KEY -eq "true") {
            $report += "## ðŸ§  VirusTotal"
            $report += "Scan completed â€“ see VirusTotal dashboard for details."
          } else {
            $report += "## ðŸ§  VirusTotal"
            $report += "Skipped â€“ no API key provided."
          }
          $report += ""
          $report += "_Report generated on $(Get-Date -Format u)_"
          $report | Out-File -FilePath quality-report.md -Encoding UTF8
          Get-Content quality-report.md | Write-Host

      - name: Upload Build Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: unsigned-artifacts
          path: |
            **/bin/Release/*.exe
            **/bin/Release/*.dll
            **/*.nupkg
            quality-report.md
