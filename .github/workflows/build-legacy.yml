name: Legacy WinForms Build

on:
  push:
    branches:
      - main
      - ci/**
    tags:
      - "v*"
  workflow_dispatch:

jobs:
  build:
    # Kör på din lokala maskin med SimplySign installerad
    runs-on: [self-hosted, windows, code-sign]

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup NuGet
        uses: nuget/setup-nuget@v1

      - name: Restore packages
        run: nuget restore TopWinPrio.sln

      - name: Setup MSBuild
        uses: microsoft/setup-msbuild@v2

      - name: Build Debug
        run: msbuild TopWinPrio.sln /t:Build /p:Configuration=Debug

      - name: Build Release
        run: msbuild TopWinPrio.sln /t:Build /p:Configuration=Release

      # -------------------------------
      #   Code Signing (SimplySign)
      # -------------------------------
      - name: Sign executable with Certum SimplySign
        shell: pwsh
        run: |
          $exePath = "TopWinPrio.CS\bin\Release\TopWinPrio.exe"
          $signtoolPath1 = "C:\Program Files (x86)\Certum\SimplySign Desktop\signtool.exe"
          $signtoolPath2 = "C:\Program Files (x86)\Microsoft SDKs\ClickOnce\SignTool\signtool.exe"
          $timestampUrl = "http://timestamp.certum.pl"

          if (-not (Test-Path $exePath)) {
              Write-Host "[ERROR] Executable not found: $exePath"
              exit 1
          }

          if (Test-Path $signtoolPath1) {
              $signtool = $signtoolPath1
          } elseif (Test-Path $signtoolPath2) {
              $signtool = $signtoolPath2
          } else {
              Write-Host "[ERROR] signtool.exe not found."
              exit 1
          }

          Write-Host "[INFO] Signing using: $signtool"
          Write-Host "[INFO] Executable: $exePath"

          & $signtool sign `
              /tr $timestampUrl `
              /td SHA256 `
              /fd SHA256 `
              /n "Open Source Developer, Marcus Ackre Medina" `
              "$exePath"

          if ($LASTEXITCODE -eq 0) {
              Write-Host "[OK] Signing completed successfully."
          } else {
              Write-Host "[WARN] signtool exited with code $LASTEXITCODE."
          }

      # -------------------------------
      #   Verify signature
      # -------------------------------
      - name: Verify digital signature
        shell: pwsh
        run: |
          $exePath = "TopWinPrio.CS\bin\Release\TopWinPrio.exe"
          $signtool = "C:\Program Files (x86)\Windows Kits\10\bin\x64\signtool.exe"
          if (Test-Path $exePath -and Test-Path $signtool) {
              Write-Host "[INFO] Verifying signature..."
              & $signtool verify /pa /v $exePath
          } else {
              Write-Host "[WARN] Could not verify signature. File or tool missing."
          }

      # -------------------------------
      #   Package artifacts
      # -------------------------------
      - name: Prepare artifacts
        shell: pwsh
        run: |
          New-Item -ItemType Directory -Force -Path artifacts | Out-Null
          Copy-Item "TopWinPrio.CS\bin\Release\TopWinPrio.exe" "artifacts\TopWinPrio.exe" -Force
          Copy-Item "TopWinPrio.CS\bin\Release" "artifacts\Release" -Recurse -Force
          Compress-Archive -Path "TopWinPrio.CS\bin\Release\*" -DestinationPath "artifacts\TopWinPrio-release.zip" -Force
          Compress-Archive -Path "TopWinPrio.CS\bin\Release\TopWinPrio.exe" -DestinationPath "artifacts\TopWinPrio-exe-only.zip" -Force

      - name: Upload release folder
        uses: actions/upload-artifact@v4
        with:
          name: TopWinPrio-release
          path: artifacts\Release

      - name: Upload release zip
        uses: actions/upload-artifact@v4
        with:
          name: TopWinPrio-release-zip
          path: artifacts\TopWinPrio-release.zip

      - name: Upload exe-only zip
        uses: actions/upload-artifact@v4
        with:
          name: TopWinPrio-exe-only
          path: artifacts\TopWinPrio-exe-only.zip

      - name: Upload single executable
        uses: actions/upload-artifact@v4
        with:
          name: TopWinPrio-exe
          path: artifacts\TopWinPrio.exe

  # -------------------------------
  #   Create Release
  # -------------------------------
  release:
    needs: build
    if: startsWith(github.ref, 'refs/tags/')
    runs-on: ubuntu-latest

    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          path: dist

      - name: Collect release assets
        run: |
          mkdir uploads
          cp dist/TopWinPrio-release-zip/TopWinPrio-release.zip uploads/
          cp dist/TopWinPrio-exe-only/TopWinPrio-exe-only.zip uploads/
          cp dist/TopWinPrio-exe/TopWinPrio.exe uploads/

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          files: uploads/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
