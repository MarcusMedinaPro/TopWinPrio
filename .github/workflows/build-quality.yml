      - name: 🧯 Scan with Windows Defender
        id: defender
        continue-on-error: true
        shell: pwsh
        run: |
          $exe = "TopWinPrio.CS\bin\Release\TopWinPrio.exe"
          $log  = "$env:TEMP\MpCmdRun.log"
          if (Test-Path $log) { Remove-Item $log -Force }

          if (Test-Path $exe) {
            Write-Host "🧠 Scanning $exe with Windows Defender..."
            $defender = "C:\Program Files\Windows Defender\MpCmdRun.exe"
            & $defender -Scan -ScanType 3 -File $exe
            $exit = $LASTEXITCODE
            Write-Host "Defender exit code: $exit"

            $logContent = if (Test-Path $log) { Get-Content $log | Out-String } else { "No log file created." }
            Write-Host "=== Defender log start ==="
            Write-Host $logContent
            Write-Host "=== Defender log end ==="

            # Treat code 0 (OK) and 2 (AccessDenied/Warning) as pass
            if ($exit -in 0, 2) {
              Write-Host "✅ Defender scan passed (code $exit)."
              echo "result=Clean" >> $env:GITHUB_OUTPUT
            } else {
              Write-Host "⚠️ Defender scan failed (code $exit)."
              echo "result=Error($exit)" >> $env:GITHUB_OUTPUT
            }

            echo "log=$logContent" >> $env:GITHUB_OUTPUT
          } else {
            Write-Host "⚠️ No executable found to scan."
            echo "result=Skipped" >> $env:GITHUB_OUTPUT
            echo "log=No file to scan." >> $env:GITHUB_OUTPUT
          }

      - name: 🔏 Verify Digital Signature
        id: signature
        shell: pwsh
        run: |
          $exe = "TopWinPrio.CS\bin\Release\TopWinPrio.exe"
          $signtool = "C:\Program Files (x86)\Windows Kits\10\bin\x64\signtool.exe"
          if ((Test-Path $exe) -and (Test-Path $signtool)) {
            Write-Host "🔍 Verifying digital signature..."
            $verify = & $signtool verify /pa /v $exe 2>&1
            if ($verify -match "Successfully verified") {
              Write-Host "✅ Signature is valid."
              echo "result=Valid" >> $env:GITHUB_OUTPUT
            } else {
              Write-Host "⚠️ Signature verification failed."
              echo "result=Invalid" >> $env:GITHUB_OUTPUT
            }
          } else {
            Write-Host "⚠️ No signature tool or file found."
            echo "result=Skipped" >> $env:GITHUB_OUTPUT
          }
