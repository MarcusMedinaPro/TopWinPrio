name: üß™ Debug VirusTotal API

on:
  workflow_dispatch:
    inputs:
      test_mode:
        description: 'Test mode to run'
        required: true
        default: 'api_test'
        type: choice
        options:
          - api_test
          - file_scan
          - full_debug

permissions:
  contents: read

jobs:
  debug-virustotal:
    runs-on: windows-latest
    name: Debug VirusTotal Integration
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup .NET SDK
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 8.0.x

      - name: Setup MSBuild
        uses: microsoft/setup-msbuild@v2

      - name: Setup NuGet
        uses: NuGet/setup-nuget@v2

      - name: Test API Key Availability
        run: |
          Write-Host "üîç Testing VirusTotal API Key Access" -ForegroundColor Cyan
          if ($env:VIRUSTOTAL_API_KEY) {
            $keyLength = $env:VIRUSTOTAL_API_KEY.Length
            $keyStart = $env:VIRUSTOTAL_API_KEY.Substring(0, [Math]::Min(8, $keyLength))
            Write-Host "‚úÖ API Key found: $keyStart... (length: $keyLength)" -ForegroundColor Green
          } else {
            Write-Host "‚ùå API Key not found or not accessible" -ForegroundColor Red
            Write-Host "Check if secret is set at organization or repository level" -ForegroundColor Yellow
          }
        env:
          VIRUSTOTAL_API_KEY: ${{ secrets.VIRUSTOTAL_API_KEY }}

      - name: Test VirusTotal API Connection
        run: |
          Write-Host "üåê Testing VirusTotal API Connection" -ForegroundColor Cyan
          try {
            $headers = @{
              'x-apikey' = $env:VIRUSTOTAL_API_KEY
            }
            $response = Invoke-RestMethod -Uri "https://www.virustotal.com/vtapi/v2/file/report" -Method Get -Headers $headers -Body @{resource = "test"} -ErrorAction Stop
            Write-Host "‚úÖ API Connection successful" -ForegroundColor Green
            Write-Host "Response: $($response | ConvertTo-Json -Depth 2)"
          } catch {
            Write-Host "‚ùå API Connection failed: $($_.Exception.Message)" -ForegroundColor Red
            if ($_.Exception.Response) {
              Write-Host "Status Code: $($_.Exception.Response.StatusCode)" -ForegroundColor Yellow
              Write-Host "Status Description: $($_.Exception.Response.StatusDescription)" -ForegroundColor Yellow
            }
          }
        env:
          VIRUSTOTAL_API_KEY: ${{ secrets.VIRUSTOTAL_API_KEY }}

      - name: Build Test File (if needed)
        if: ${{ github.event.inputs.test_mode == 'file_scan' || github.event.inputs.test_mode == 'full_debug' }}
        run: |
          Write-Host "üî® Building test file for scanning" -ForegroundColor Cyan
          nuget restore TopWinPrio.sln
          msbuild TopWinPrio.sln /p:Configuration=Release /m /p:Platform="Any CPU"

      - name: Test VirusTotal File Scan Action
        if: ${{ github.event.inputs.test_mode == 'file_scan' || github.event.inputs.test_mode == 'full_debug' }}
        uses: crazy-max/ghaction-virustotal@v4
        continue-on-error: true
        id: virustotal_test
        with:
          vt_api_key: ${{ secrets.VIRUSTOTAL_API_KEY }}
          files: |
            TopWinPrio.CS/bin/Release/*.exe
          vt_monitor: false

      - name: Analyze Results
        run: |
          Write-Host "üìä Analysis Results" -ForegroundColor Cyan
          Write-Host "=================" -ForegroundColor Cyan
          
          if ($env:VIRUSTOTAL_API_KEY) {
            Write-Host "‚úÖ Secret is accessible" -ForegroundColor Green
          } else {
            Write-Host "‚ùå Secret is NOT accessible" -ForegroundColor Red
            Write-Host "" 
            Write-Host "üîß Troubleshooting Steps:" -ForegroundColor Yellow
            Write-Host "1. Verify secret name is exactly 'VIRUSTOTAL_API_KEY'" -ForegroundColor White
            Write-Host "2. Check if secret is set at Organization level with correct repository visibility" -ForegroundColor White
            Write-Host "3. Verify API key is valid on VirusTotal website" -ForegroundColor White
            Write-Host "4. Check if API key has proper permissions" -ForegroundColor White
          }
        env:
          VIRUSTOTAL_API_KEY: ${{ secrets.VIRUSTOTAL_API_KEY }}

      - name: Upload Debug Results
        uses: actions/upload-artifact@v4
        with:
          name: virustotal-debug-results
          path: |
            TopWinPrio.CS/bin/Release/*.exe