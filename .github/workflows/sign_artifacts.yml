name: üîè Sign Artifacts (Local Runner)

# Signing enabled for .NET 4.8+

on:
  workflow_run:
    workflows: ["üß™ Build & Test"]
    types: [completed]

permissions:
  contents: write
  actions: read

jobs:
  sign:
    if: github.event.workflow_run.conclusion == 'success'
    name: Sign artifacts on self-hosted runner
    runs-on: [self-hosted, windows, code-sign]

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Download unsigned build artifacts
        uses: dawidd6/action-download-artifact@v3
        with:
          name: release-bin
          path: unsigned
          workflow: build-test.yml
          run_id: ${{ github.event.workflow_run.id }}

      - name: Prepare output folder
        shell: pwsh
        run: New-Item -ItemType Directory -Force -Path signed | Out-Null

      - name: Restart SimplySign Desktop
        shell: pwsh
        continue-on-error: true
        run: |
          Write-Host "Restarting SimplySign Desktop to ensure fresh session..."
          Get-Process -Name "SimplySignDesktop" -ErrorAction SilentlyContinue | Stop-Process -Force
          Start-Sleep -Seconds 2
          Start-Process "C:\Program Files\Certum\SimplySign Desktop\SimplySignDesktop.exe"
          Start-Sleep -Seconds 5
          Write-Host "SimplySign Desktop restarted"

      - name: Sign artifacts with Certum SimplySign Desktop
        shell: pwsh
        env:
          CERTUM_TSA_URL: "http://time.certum.pl"
        run: |
          $signer = "C:\Program Files\Certum\SimplySign Desktop\SimplySignDesktop.exe"
          $tsa = $env:CERTUM_TSA_URL

          if (-not (Test-Path $signer)) {
              Write-Host "‚ùå SimplySign Desktop not found" -ForegroundColor Red
              exit 1
          }

          $files = Get-ChildItem -Path unsigned -Recurse -Include *.exe, *.dll, *.nupkg, *.zip

          if (-not $files) {
            Write-Host "‚ö†Ô∏è No artifacts found to sign"
            exit 0
          }

          Write-Host "Found $($files.Count) file(s) to sign" -ForegroundColor Cyan
          $signedCount = 0
          $failedCount = 0

          foreach ($f in $files) {
            Write-Host "üîè Signing $($f.Name)..."

            $output = & "$signer" --sign "$($f.FullName)" --tsa "$tsa" 2>&1
            $exitCode = $LASTEXITCODE

            if ($exitCode -eq 0) {
              # Verify signature
              $sig = Get-AuthenticodeSignature $f.FullName
              if ($sig.Status -eq 'Valid') {
                Copy-Item $f.FullName signed/ -Force
                Write-Host "‚úÖ Signed & verified: $($f.Name)" -ForegroundColor Green
                $signedCount++
              } else {
                Write-Warning "‚ùå Signed but verification failed: $($f.Name) - $($sig.Status)"
                $failedCount++
              }
            } else {
              Write-Warning "‚ùå Failed to sign: $($f.Name) (exit: $exitCode, output: $output)"
              $failedCount++
            }
          }

          Write-Host "`nSigning Summary:" -ForegroundColor Cyan
          Write-Host "‚úÖ Successfully signed: $signedCount" -ForegroundColor Green
          Write-Host "‚ùå Failed: $failedCount" -ForegroundColor Yellow

          if ($signedCount -eq 0) {
              Write-Error "No files were signed successfully"
              exit 1
          }

      - name: Upload signed artifacts
        uses: actions/upload-artifact@v4
        with:
          name: signed-release-bin
          path: signed/
          retention-days: 90
